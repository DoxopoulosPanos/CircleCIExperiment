version: 2.1
commands:
   # Exercise - Rollback
   destroy_environment_in_failure:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
    # Exercise: Config and Deployment
  create_inventory:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Create inventory file
          command: |
            touch inventory
      - run:
          name: Prepare inventory file
          command: |
            echo [all] > inventory
      - run:
          name: Describe instances
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Project,Values=udacity" \
              --output text >> inventory
      - persist_to_workspace:
          root: .
          paths:
            - inventory
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["d3:3a:9c:8c:a6:e2:54:f7:bd:6f:c2:1b:9e:46:4d:6a"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - attach_workspace:
          at: ~/
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i ~/inventory main.yml
      - persist_to_workspace:
          root: .
          paths:
            - ./
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            var=$(sed '2q;d' ~/inventory)
            echo $var
            var=$var":3000"
            echo $var
            # Test if website exists
            if curl -s --head $var
            then
              return 0
            else
              return 1
            fi
      - destroy_environment_in_failure
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:5} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:5}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:5} --delete

# Sequential workflow
workflows:
  # Name the workflow
  my_workflow:
      jobs:
        # - create_infrastructure
        # - create_inventory:
        #     requires:
        #       - create_infrastructure
        # - configure_infrastructure:
        #     requires:
        #       - create_inventory
        # - smoke_test:
        #     requires:
        #       - configure_infrastructure
        - create_and_deploy_front_end